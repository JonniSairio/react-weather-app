{"version":3,"sources":["components/Header.js","components/WeatherSearch.js","components/DateTime.js","components/WeatherData.js","components/Error.js","App.js","reportWebVitals.js","index.js"],"names":["Header","WeatherSearch","api_call","className","onSubmit","name","placeholder","type","DateTime","date","Date","toLocaleDateString","toLocaleTimeString","WeatherData","cityWeatherInfo","div","animate","opacity","transition","duration","initial","sys","country","weather","description","main","temp","feels_like","wind","speed","humidity","Error","error","App","useState","setCityWeatherInfo","setError","e","a","preventDefault","cityName","target","elements","city","value","process","URL","request","axios","get","response","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAUeA,EARA,WACb,OACE,iCACE,wDCSSC,G,MAXO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,qBAAKC,UAAU,iBAAf,SACE,uBAAMC,SAAUF,EAAhB,UACE,uBAAOG,KAAK,OAAOC,YAAY,uBAAuBC,KAAK,SAC3D,wDCIOC,EAVE,WACf,IAAMC,EAAO,IAAIC,KAEjB,OACE,qBAAKP,UAAW,YAAhB,mBACOM,EAAKE,qBADZ,cACsCF,EAAKG,yB,gBC6BhCC,EA/BK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAErB,OACE,eAAC,IAAOC,IAAR,CAAYC,QAAS,CAACC,QAAS,EAAGC,WAAW,CAACC,SAAU,MACxDC,QAAS,CAACH,QAAQ,GAClBd,UAAU,eAFV,UAGE,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACE,+BAAKW,EAAgBT,KAArB,KAA6BS,EAAgBO,IAAIC,WACjD,oBAAInB,UAAU,cAAd,SAA6BW,EAAgBS,QAAQ,GAAGC,iBAE1D,sBAAKrB,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,mBAAGA,UAAU,gBAAb,yBACA,oBAAGA,UAAU,gBAAb,UAA8BW,EAAgBW,KAAKC,KAAnD,YACA,oBAAGvB,UAAU,mBAAb,yBAA6CW,EAAgBW,KAAKE,WAAlE,gBAEF,sBAAKxB,UAAU,oBAAf,UACE,mBAAGA,UAAU,gBAAb,wBACA,oBAAGA,UAAU,gBAAb,UAA8BW,EAAgBc,KAAKC,MAAnD,aAEF,sBAAK1B,UAAU,eAAf,UACE,mBAAGA,UAAU,gBAAb,sBACA,oBAAGA,UAAU,gBAAb,UAA8BW,EAAgBW,KAAKK,SAAnD,kBClBKC,EARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,qBAAK7B,UAAU,QAAf,SACE,6BAAK6B,OC6BIC,EA1BH,WAAO,IAAD,EAC8BC,qBAD9B,mBACTpB,EADS,KACQqB,EADR,OAEUD,qBAFV,mBAETF,EAFS,KAEFI,EAFE,KAIVlC,EAAQ,uCAAG,WAAMmC,GAAN,qBAAAC,EAAA,yDACfD,EAAEE,iBACIC,EAAWH,EAAEI,OAAOC,SAASC,KAAKC,MAFzB,0CAGOR,EAAS,iCAAkCD,EAAmB,QAHrE,aAICU,mCACVC,EALS,4DAKkDN,EALlD,kBAICK,mCAJD,iBAMTE,EAAUC,IAAMC,IAAIH,GANX,SAOQC,EAPR,OAOTG,EAPS,OAQff,EAAmBe,EAASC,MAC5Bf,EAAS,MATM,4CAAH,sDAYd,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAelC,SAAUA,IACvBY,GAAmB,cAAC,EAAD,CAAaA,gBAAiBA,IACjDkB,GAAS,cAAC,EAAD,CAAOA,MAAOA,QCjBhBoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8308ab12.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Weather Application</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../styles/WeatherSearch.css';\r\n\r\nconst WeatherSearch = ({ api_call }) => {\r\n  return (\r\n    <div className=\"weather-search\">\r\n      <form onSubmit={api_call}>\r\n        <input name=\"city\" placeholder=\"Enter name of a city\" type=\"text\"/>\r\n        <button>Get Weather</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherSearch;","import React from 'react';\r\n\r\nconst DateTime = () => {\r\n  const date = new Date()\r\n\r\n  return(\r\n    <div className =\"date-time\">\r\n      { `${date.toLocaleDateString()} - ${date.toLocaleTimeString()}` }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateTime;","import React from 'react';\r\nimport DateTime from './DateTime';\r\nimport '../styles/WeatherData.css';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst WeatherData = ({ cityWeatherInfo }) => {\r\n  \r\n  return (\r\n    <motion.div animate={{opacity: 1, transition:{duration: 1.5} }} \r\n    initial={{opacity:0}} \r\n    className=\"weather-data\">\r\n      <DateTime />\r\n      <div className=\"city-name\">\r\n        <h1>{cityWeatherInfo.name}, {cityWeatherInfo.sys.country}</h1>\r\n        <h1 className=\"description\">{cityWeatherInfo.weather[0].description}</h1>\r\n      </div>\r\n      <div className=\"weather-specs\">\r\n        <div className=\"weather-spec\">\r\n          <p className=\"weather-title\">Temperature</p>\r\n          <p className=\"weather-value\">{cityWeatherInfo.main.temp} °C</p>\r\n          <p className=\"weather-value-sm\">(feels like {cityWeatherInfo.main.feels_like} °C)</p>\r\n        </div>\r\n        <div className=\"weather-spec wind\">\r\n          <p className=\"weather-title\">Wind Speed</p>\r\n          <p className=\"weather-value\">{cityWeatherInfo.wind.speed} m/s</p>\r\n        </div>\r\n        <div className=\"weather-spec\">\r\n          <p className=\"weather-title\">Humidity</p>\r\n          <p className=\"weather-value\">{cityWeatherInfo.main.humidity} %</p>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n    \r\n  );\r\n};\r\n\r\nexport default WeatherData;","import React from 'react';\r\n\r\nconst Error = ({ error }) => {\r\n  return (\r\n    <div className=\"error\">\r\n      <h1>{error}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error;"," import React, { useState } from 'react';\n import axios from 'axios';\n//components\nimport Header from './components/Header';\nimport WeatherSearch from './components/WeatherSearch';\nimport WeatherData from './components/WeatherData';\nimport Error from './components/Error';\n\nconst App = () => {\n  const [cityWeatherInfo, setCityWeatherInfo] = useState();\n  const [error, setError] = useState();\n\n  const api_call = async e => {\n    e.preventDefault();\n    const cityName = e.target.elements.city.value;\n    if (!cityName) return setError(\"Please type in name of a city\"), setCityWeatherInfo(null); \n    const API_KEY = process.env.REACT_APP_WEATHER_API;\n    const URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY}&units=metric`;\n    const request = axios.get(URL);\n    const response = await request;\n    setCityWeatherInfo(response.data);\n    setError(null);\n  }  \n\n  return (\n    <div>\n      <Header />\n      <WeatherSearch api_call={api_call} />\n      { cityWeatherInfo && <WeatherData cityWeatherInfo={cityWeatherInfo} /> }\n      { error && <Error error={error} /> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}